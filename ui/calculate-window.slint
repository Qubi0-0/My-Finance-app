import { Button, VerticalBox, TextEdit, LineEdit, ComboBox } from "std-widgets.slint";
import { Buttoner, CalculateLineEdit, CalculateText, MyComboBox } from "my-components.slint";

export component CalculateComponent inherits Rectangle {
    in-out property <int> active-tab: 1;
    in-out property <string> selected_timespan: "Daily";
    in-out property <float> cost;
    in-out property <float> day_value;
    in-out property <float> week_value;
    in-out property <float> month_value;
    in-out property <float> year_value;

    callback request-change-cost-estimations();
    Image { 
        source: @image-url("icons/calculator.svg");
        image-fit: ImageFit.cover;
        colorize: #1a1e2b;
        width: 350px;
    }

    x: root.active-tab == 1 ? 0 : root.active-tab < 1 ? - self.width - 1px : root.width + 1px;
    animate x { duration: 125ms; easing: ease; }
    GridLayout {
        property <length> grid_width: self.width;
        spacing-vertical: 10px;
        spacing-horizontal: 5px;
        Row {
            CalculateText {
                text_value: "Input Value";
            }
            CalculateLineEdit {
                text: "\{root.cost}";
                width: grid_width / 3;
                read-only: false;
                edited(text) => {
                    root.cost = text.to_float();
                    root.request-change-cost-estimations();
                }
            }
            HorizontalLayout {
                MyComboBox {
                    width: grid_width / 3 - 10px;
                    selected => {
                        root.selected_timespan = self.current_value;
                        root.request-change-cost-estimations();
                    }
                }
            }
        }
        Row {
            CalculateText {
                text_value: "Daily cost";
                width: grid_width / 3;
            }
            CalculateLineEdit {
                text: "\{root.day_value}";
                width: grid_width / 3;
                placeholder-text: "Daily";
            }   
            // CalculateText {
                // width: grid_width / 3 - 10px;
            // }
        }
        Row {
            CalculateText {
                text_value: "Weekly cost";
                width: grid_width / 3;
            }
            CalculateLineEdit {
                text: "\{root.week_value}";
                width: grid_width / 3;
                placeholder-text: "Weekly";
            }   
            // CalculateText {
                // width: grid_width / 3 - 10px;
            // }
        }
        Row {  
            CalculateText {
                text_value: "Monthly cost";
                width: grid_width / 3;
            }
            CalculateLineEdit {
                text: "\{root.month_value}";
                width: grid_width / 3;
                placeholder-text: "Monthly";
            }   
            // CalculateText {
            //     width: grid_width / 3 - 10px;
            // }
        }
        Row {  
            CalculateText {
                text_value: "Yearly cost";
                width: grid_width / 3;
            }
            CalculateLineEdit {
                text: "\{root.year_value}";
                width: grid_width / 3;
                placeholder-text: "Yearly";
            }   
            // CalculateText {
            //     width: grid_width / 3 - 10px;
            // }
        }
    }
}